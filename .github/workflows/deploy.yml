name: Deploy Node.js app

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: BACK_SECRET
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: List files in the repository
        run: ls -R

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Create .env file
        run: |
          touch .env
          echo "JWT_SECRET=${{ secrets.BACK_SECRET_JWT_SECRET }}" >> .env
          echo "PORT=${{ secrets.BACK_SECRET_PORT }}" >> .env
          echo "SALT_ROUNDS=${{ secrets.BACK_SECRET_SALT_ROUNDS }}" >> .env
          echo "DB_DIALECT=${{ secrets.BACK_SECRET_DB_DIALECT }}" >> .env
          echo "POSTGRES_DB=${{ secrets.BACK_SECRET_POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.BACK_SECRET_POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.BACK_SECRET_POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.BACK_SECRET_POSTGRES_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.BACK_SECRET_DB_PORT }}" >> .env
          echo "FRONTEND_URL=${{ secrets.BACK_SECRET_FRONTEND_URL }}" >> .env

      - name: Debug .env file
        run: cat .env

      - name: npm install, build, and test
        run: |
          npm install
          npm run start --if-present

      - name: Zip artifact for deployment
        run: |
          cd api-food-check  # Assurez-vous d'être dans le bon répertoire
          zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: api-food-check/release.zip